### YamlMime:Tutorial
title: <span data-ttu-id="0dac1-101">Stringhe interpolate in C#</span><span class="sxs-lookup"><span data-stu-id="0dac1-101">Interpolated strings in C#</span></span>
metadata:
  title: Esercitazione interattiva sulle stringhe interpolate - Guide introduttive per C#
  description: "In questa esercitazione si apprende come usare in modo interattivo nel browser la funzionalità delle stringhe interpolate di C#. Verranno descritte le procedure per scrivere codice C# e visualizzare i risultati della compilazione ed esecuzione del codice direttamente nel browser."
  audience: Developer
  ms.custom: mvc
  ms.topic: get-started-article
  level: Beginner
  displayType: two-column
  interactive: csharp
  nextTutorialHref: list-collection
  nextTutorialTitle: <span data-ttu-id="0dac1-105">Raccolte in C#</span><span class="sxs-lookup"><span data-stu-id="0dac1-105">Collections in C#</span></span>
  ms.openlocfilehash: 6f2bb18298ec41c8ccf634035059940342cbc82c
  ms.sourcegitcommit: 96cc82cac4650adfb65ba351506d8a8fbcd17b5c
  ms.translationtype: HT
  ms.contentlocale: it-IT
  ms.lasthandoff: 02/19/2018
items:
- durationInMinutes: 2
  content: "<span data-ttu-id=\"0dac1-106\">Questa guida introduttiva illustra come usare le stringhe interpolate in C# per inserire i valori in un'unica stringa di output in modo interattivo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-106\">This quickstart teaches you how to use interpolated strings in C# to insert values into a single ouput string interactively.</span></span> <span data-ttu-id=\"0dac1-107\">Si usa il browser per scrivere codice C# ed è possibile visualizzare immediatamente i risultati della compilazione e dell'esecuzione del codice.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-107\">You use your browser to write C# code and can immediately see the results of compiling and running your code.</span></span> <span data-ttu-id=\"0dac1-108\">La guida introduttiva include una serie di lezioni che spiegano come concatenare le stringhe, inserire i valori nelle stringhe e applicare formattazioni diverse a tali valori.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-108\">The quickstart contains a series of lessons that concatenate strings, insert values into strings, and format those values in different ways.</span></span>\n"
- title: <span data-ttu-id="0dac1-109">Creare una stringa interpolata</span><span class="sxs-lookup"><span data-stu-id="0dac1-109">Create an interpolated string</span></span>
  durationInMinutes: 2
  content: "<span data-ttu-id=\"0dac1-110\">Eseguire il codice seguente nella finestra interattiva.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"0dac1-111\">A tale scopo digitare il blocco di codice seguente nella finestra interattiva (sostituire \"\\<name>\" con il proprio nome) e fare clic sul pulsante **Esegui**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-111\">To do that, type the following code block in the interactive window (replace \"\\<name>\" with your name) and click the **Run** button:</span></span>\n\n```csharp\nvar name = \"<name>\";\nConsole.WriteLine($\"Hello, {name}. It's a pleasure to meet you!\");\n```\n\n<span data-ttu-id=\"0dac1-112\">Quando si esegue il programma viene visualizzata una singola stringa con una formula di benvenuto che include il nome dell'utente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-112\">When you run the program, it displays a single string that includes your name in the greeting.</span></span> <span data-ttu-id=\"0dac1-113\">La stringa inclusa nella chiamata al metodo <xref:System.Console.WriteLine%2A> è una *stringa interpolata*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-113\">The string included in the <xref:System.Console.WriteLine%2A> method call is an *interpolated string*.</span></span> <span data-ttu-id=\"0dac1-114\">Si tratta di un tipo di modello che consente di costruire un'unica stringa detta *stringa di risultato* da una stringa che include codice incorporato.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-114\">It's a kind of template that lets you construct a single string (called the *result string*) from a string that includes embedded code.</span></span> <span data-ttu-id=\"0dac1-115\">Le stringhe interpolate sono particolarmente utili per inserire valori in una stringa o per concatenare (unire) più stringhe.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-115\">Interpolated strings are particularly useful for inserting values into a string or concatenating (joining together) strings.</span></span> \n\n<span data-ttu-id=\"0dac1-116\">Questo semplice esempio contiene i due elementi che devono essere presenti in ogni stringa interpolata:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-116\">This simple example contains the two elements that every interpolated string must have:</span></span> \n\n- <span data-ttu-id=\"0dac1-117\">Un valore letterale stringa che inizia con il carattere `$` prima delle virgolette inglesi aperte.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-117\">A string literal that begins with the `$` character before its opening quotation mark character.</span></span> <span data-ttu-id=\"0dac1-118\">Tra il simbolo `$` e le virgolette non devono essere presenti spazi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-118\">There can't be any spaces between the `$` symbol and the quotation mark character.</span></span> <span data-ttu-id=\"0dac1-119\">Per vedere che cosa accade se si include uno spazio, inserirne uno dopo il carattere `$` nella finestra interattiva e fare clic sul pulsante **Esegui**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-119\">(If you'd like to see what happens if you include one, insert a space after the `$` character in the interactive window and click the **Run** button.</span></span> <span data-ttu-id=\"0dac1-120\">Il compilatore C# restituisce il messaggio \"Carattere '$' imprevisto\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-120\">The C# compiler complains, \"Unexpected character '$'\".)</span></span> \n\n- <span data-ttu-id=\"0dac1-121\">Una o più *espressioni interpolate*.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-121\">One or more *interpolated expressions*.</span></span> <span data-ttu-id=\"0dac1-122\">Un'espressione interpolata è indicata tra parentesi graffe di apertura e chiusura (`{` e `}`).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-122\">An interpolated expression is indicated by an opening and closing brace (`{` and `}`).</span></span> <span data-ttu-id=\"0dac1-123\">All'interno delle parentesi graffe è possibile inserire qualsiasi espressione C# che restituisce un valore, incluso `null`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-123\">You can put any C# expression that returns a value (including `null`) inside the braces.</span></span> \n\n<span data-ttu-id=\"0dac1-124\">Ora si proveranno altri esempi di stringhe interpolate con altri tipi di dati.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-124\">Let's try a few more interpolated string examples with some other data types.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"0dac1-125\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-125\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0dac1-126\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-126\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="0dac1-127">Includere tipi di dati diversi</span><span class="sxs-lookup"><span data-stu-id="0dac1-127">Include different data types</span></span>
  durationInMinutes: 3
  content: "<span data-ttu-id=\"0dac1-128\">Nella guida introduttiva precedente è stata usata una stringa interpolata per inserire una stringa in un'altra stringa.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-128\">In the previous quickstart, you used an interpolated string to insert one string inside of another.</span></span> <span data-ttu-id=\"0dac1-129\">Un'espressione di stringa interpolata può avere qualsiasi tipo di dati.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-129\">An interpolated string expression can be any data type, though.</span></span> <span data-ttu-id=\"0dac1-130\">Considerare ad esempio una stringa interpolata con valori di tipi di dati diversi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-130\">Let's try an interpolated string that has values of multiple data types.</span></span> \n\n<span data-ttu-id=\"0dac1-131\">L'esempio seguente include espressioni interpolate con un oggetto `Vegetable`, un membro dell'enumerazione `Unit`, un valore <xref:System.DateTime> e un valore <xref:System.Decimal>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-131\">The following example includes interpolated expressions with a `Vegetable` object, a member of the `Unit` enumeration, a <xref:System.DateTime> value, and a <xref:System.Decimal> value.</span></span> <span data-ttu-id=\"0dac1-132\">Eseguirla nella finestra interattiva.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-132\">Run it in the interactive window.</span></span>\n\n```csharp\npublic class Vegetable\n{\n   public Vegetable(string name) => Name = name;\n\n   public string Name { get; }\n\n   public override string ToString() => Name;\n}\n\npublic class Example\n{\n   public enum Unit { item, pound, ounce, dozen };\n\n   public static void Main()\n   {\n      var item = new Vegetable(\"eggplant\");\n      var date = DateTime.Now;\n      var price = 1.99m;\n      var unit = Unit.item;\n      Console.WriteLine($\"On {date}, the price of {item} was {price} per {unit}.\");\n   }\n}\n```\n\n<span data-ttu-id=\"0dac1-133\">Osservare che una delle espressioni interpolate include l'oggetto `item` nella stringa di risultato visualizzata nella console e che in questo caso nella stringa di risultato viene inserita la stringa \"eggplant\" (melanzana).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-133\">Note that one of the interpolated expressions includes the `item` object in the result string that's displayed to the console, and in this case the string \"eggplant\" is inserted into the result string.</span></span> <span data-ttu-id=\"0dac1-134\">Questo si verifica perché quando un'espressione interpolata non è di tipo stringa, il compilatore C# esegue le operazioni seguenti:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-134\">That's because, when the type of an interpolated expression is not a string, the C# compiler does the following:</span></span>\n\n- <span data-ttu-id=\"0dac1-135\">Se l'espressione interpolata è `null`, restituisce una stringa vuota (\"\" o <xref:System.String.Empty?displayProperty=nameWithType>).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-135\">If the interpolated expression is `null`, the interpolated expression returns an empty string (\"\", or <xref:System.String.Empty?displayProperty=nameWithType>).</span></span>\n\n- <span data-ttu-id=\"0dac1-136\">Se l'espressione interpolata non è `null`, viene chiamato il metodo `ToString` del tipo dell'espressione interpolata.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-136\">If the interpolated expression is not `null`, the `ToString` method of the type of the interpolated expression is called.</span></span> <span data-ttu-id=\"0dac1-137\">Per il test di questo funzionamento impostare come commento la definizione del metodo `Vegetable.ToString` dell'esempio, facendola precedere da un simbolo di commento (`//`).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-137\">You can test this by commenting out the definition of the `Vegetable.ToString` method in the example by putting a comment symbol (`//`) in front of it.</span></span> <span data-ttu-id=\"0dac1-138\">Nell'output la stringa \"eggplant\" viene sostituita dal nome completo del tipo (lo spazio dei nomi definito da REPL di C# insieme al nome di tipo). Questo è il funzionamento predefinito del metodo <xref:System.Object.ToString?displayProperty=nameWithType>.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-138\">In the output, the string \"eggplant\" is replaced by the fully qualified type name (the namespace defined by the C# REPL along with the type name), which is the default behavior of the <xref:System.Object.ToString?displayProperty=nameWithType> method.</span></span>   \n\n<span data-ttu-id=\"0dac1-139\">Nell'output di questo esempio la data è troppo precisa (il prezzo delle melanzane non varia ogni secondo) e il valore del prezzo non indica una valuta.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-139\">In the output from this example, the date is too precise (the price of eggplant does not vary by the second), and the price value doesn't indicate a unit of currency.</span></span> <span data-ttu-id=\"0dac1-140\">Nel passaggio successivo si apprenderà come risolvere questi problemi controllando la formattazione delle stringhe restituite dalle espressioni interpolate.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-140\">In the next step, you'll learn how to fix those issues by controlling the format of strings returned by interpolated expressions.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"0dac1-141\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-141\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0dac1-142\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-142\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="0dac1-143">Controllare la formattazione delle espressioni interpolate</span><span class="sxs-lookup"><span data-stu-id="0dac1-143">Control the formatting of interpolated expressions</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"0dac1-144\">Nella lezione precedente sono state inserite nella stringa di risultato due stringhe con formattazione imprecisa.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-144\">In the previous lesson, two poorly formatted strings were inserted into the result string.</span></span> <span data-ttu-id=\"0dac1-145\">Uno è un valore di data e ora nel quale solo la data risultava corretta.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-145\">One was a date and time value for which only the date was appropriate.</span></span> <span data-ttu-id=\"0dac1-146\">Il secondo è un prezzo che non indicava la valuta.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-146\">The second was a price that did not indicate its unit of currency.</span></span> <span data-ttu-id=\"0dac1-147\">Entrambi i problemi sono di facile risoluzione.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-147\">Both issues are easy to address.</span></span> <span data-ttu-id=\"0dac1-148\">Le espressioni interpolate possono includere *stringhe di formato* che controllano la formattazione di determinati tipi di dati.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-148\">Interpolated expressions can include *format strings* that control the formatting of particular types.</span></span> <span data-ttu-id=\"0dac1-149\">Modificare la chiamata a `Console.WriteLine` dell'esempio precedente in modo da includere l'identificatore di formato per i campi data e prezzo, come indicato nella riga seguente:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-149\">Modify the call to `Console.WriteLine` from the previous example to include the format specifier for the date and price fields as shown in the following line:</span></span>\n\n```csharp\nConsole.WriteLine($\"On {date:d}, the price of {item} was {price:C2} per {unit}.\");\n```\n\n<span data-ttu-id=\"0dac1-150\">Per specificare una stringa di formato, far seguire all'espressione interpolata i due punti e la stringa di formato desiderata.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-150\">You specify a format string by following the interpolated expression with a colon and the format string.</span></span> <span data-ttu-id=\"0dac1-151\">\"d\" è un [stringa di formato data e ora standard](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) che rappresenta il formato di data breve.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-151\">\"d\" is a [standard date and time format string](../../standard/base-types/standard-date-and-time-format-strings.md#the-short-date-d-format-specifier) that represents the short date format.</span></span> <span data-ttu-id=\"0dac1-152\">\"C2\" è un [stringa di formato numerico standard](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) che rappresenta un numero come valore di valuta con due cifre dopo il separatore decimale.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-152\">\"C2\" is a  [standard numeric format string](../../standard/base-types/standard-numeric-format-strings.md#the-currency-c-format-specifier) that represents a number as a currency value with two digits after the decimal point.</span></span>\n\n<span data-ttu-id=\"0dac1-153\">Molti tipi delle librerie .NET Standard supportano un set predefinito di stringhe di formato.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-153\">A number of types in the .NET Standard libraries support a predefined set of format strings.</span></span> <span data-ttu-id=\"0dac1-154\">Tali tipi includono tutti i tipi numerici e i tipi data e ora.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-154\">These include all the numeric types and the date and time types.</span></span> <span data-ttu-id=\"0dac1-155\">Per l'elenco completo dei tipi che supportano le stringhe di formato, vedere [Stringhe di formato e tipi della libreria di classe .NET](../../standard/base-types/formatting-types.md#stringRef) nell'articolo [Formattazione di tipi in .NET](../../standard/base-types/formatting-types.md).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-155\">For a complete list of types that support format strings, see [Format Strings and .NET Class Library Types](../../standard/base-types/formatting-types.md#stringRef) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span> <span data-ttu-id=\"0dac1-156\">Qualsiasi tipo può supportare un set di stringhe di formato. È anche possibile sviluppare estensioni di formattazione personalizzata per aggiungere una formattazione personalizzata ai tipi esistenti.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-156\">Any type can support a set of format strings, and you can also develop custom formatting extensions that provide custom formatting for existing types.</span></span> <span data-ttu-id=\"0dac1-157\">Per informazioni sulla formattazione personalizzata con un'implementazione <xref:System.ICustomFormatter>, vedere [Formattazione personalizzata con ICustomFormatter](../../standard/base-types/formatting-types.md#custom-formatting-with-icustomformatter) nell'articolo [Formattazione di tipi in .NET](../../standard/base-types/formatting-types.md).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-157\">For information on custom formatting by providing an <xref:System.ICustomFormatter> implementation, see [Custom Formatting with ICustomFormatter](../../standard/base-types/formatting-types.md#custom-formatting-with-icustomformatter) in the [Formatting Types in .NET](../../standard/base-types/formatting-types.md) article.</span></span>\n\n<span data-ttu-id=\"0dac1-158\">Provare a modificare le stringhe di formato nell'**editor .NET** per vedere come cambia la formattazione della stringa di data e ora e del valore numerico.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-158\">Try modifying the format strings in the **.NET Editor** to see how they affect the formatting of the date and time and the numeric value.</span></span> <span data-ttu-id=\"0dac1-159\">Modificare il valore \"d\" in `{date:d}` inserendo i valori \"t\" (per visualizzare il formato ora breve), \"y\" (per visualizzare anno e mese) e \"yyyy\" (per visualizzare l'anno come numero a quattro cifre).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-159\">Change the \"d\" in `{date:d}` to \"t\" (to display the short time format), \"y\" (to display the year and month), and \"yyyy\" (to display the year as a four-digit number).</span></span> <span data-ttu-id=\"0dac1-160\">Modificare \"C2\" in `{price:C2}` inserendo \"e\" (per la notazione esponenziale) e \"F3\" (per un valore numerico con tre cifre dopo il separatore decimale).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-160\">Change the \"C2\" in `{price:C2}` to \"e\" (for exponential notation) and \"F3\" (for a numeric value with three digits after the decimal point).</span></span>\n\n<span data-ttu-id=\"0dac1-161\">Oltre alla formattazione è possibile controllare la larghezza del campo e l'allineamento delle stringhe restituite da un'espressione interpolata.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-161\">In addition to controlling formatting, you can also control the field width and alignment of the strings returned by an interpolated expression.</span></span> <span data-ttu-id=\"0dac1-162\">Il passaggio successivo indica come eseguire questa operazione.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-162\">In the next step, you'll learn how to do this.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"0dac1-163\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-163\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0dac1-164\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-164\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="0dac1-165">Controllare la larghezza del campo e l'allineamento delle espressioni interpolate</span><span class="sxs-lookup"><span data-stu-id="0dac1-165">Control the field width and alignment of interpolated expressions</span></span>
  durationInMinutes: 6
  content: "<span data-ttu-id=\"0dac1-166\">In genere quando la stringa restituita da un'espressione interpolata è inclusa in una stringa di risultato non ha spazi iniziali o finali.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-166\">Ordinarily, when the string returned by an interpolated expression is included in a result string, it has no leading or trailing spaces.</span></span> <span data-ttu-id=\"0dac1-167\">Specie nelle istanze in cui si lavora con un set di dati, le espressioni interpolate consentono di specificare la larghezza e l'allineamento di un campo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-167\">Particularly for instances in which you are working with a set of data, interpolated expressions let you specify a field width and its alignment.</span></span> <span data-ttu-id=\"0dac1-168\">Per verificarlo eseguire il codice seguente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-168\">To see this, run the following code.</span></span>\n\n```csharp\n  var inventory = new Dictionary<string, int>();\n  inventory.Add(\"hammer, ball pein\", 18);\n  inventory.Add(\"hammer, cross pein\", 5);\n  inventory.Add(\"screwdriver, Phillips #2\", 14);\n\n  Console.WriteLine($\"Inventory on {DateTime.Now:d}\");\n  Console.WriteLine(\" \");\n  Console.WriteLine($\"{\"Item\",-25}    {\"Quantity\",10}\");\n  Console.WriteLine(\" \"); \n  foreach (var item in inventory)\n     Console.WriteLine($\"{item.Key,-25}     {item.Value,10}\");\n```\n\n<span data-ttu-id=\"0dac1-169\">I nomi degli elementi vengono allineati a sinistra e le quantità corrispondenti vengono allineate a destra.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-169\">The item names are left-aligned, and their quantities are right-aligned.</span></span> <span data-ttu-id=\"0dac1-170\">Per specificare l'allineamento aggiungere una virgola (\",\") dopo l'espressione e quindi indicare la larghezza del campo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-170\">You specify the alignment by adding a comma (\",\") after the expression and designating the field width.</span></span> <span data-ttu-id=\"0dac1-171\">Se la larghezza del campo è un numero positivo, il campo è allineato a destra:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-171\">If the field width is a positive number, the field is right-aligned:</span></span>\n\n```text\n{expression, width}\n```\n\n<span data-ttu-id=\"0dac1-172\">Se la larghezza del campo è un numero negativo, il campo è allineato a sinistra:</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-172\">If the field width is a negative number, the field is left-aligned:</span></span>\n\n```text\n{expression, -width}\n```\n<span data-ttu-id=\"0dac1-173\">Provare a rimuovere il segno negativo dalle espressioni interpolate `{\"Item\",-25}` e `{item.Key,-25}` ed eseguire di nuovo l'esempio.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-173\">Try removing the negative signs from the `{\"Item\",-25}` and `{item.Key,-25}` interpolated expressions and run the example again.</span></span> <span data-ttu-id=\"0dac1-174\">Questa volta il nome dell'elemento viene allineato a destra.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-174\">This time, the item name is right-aligned.</span></span>\n\n<span data-ttu-id=\"0dac1-175\">È possibile combinare una larghezza di campo e una stringa di formato in un'unica espressione interpolata.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-175\">You can combine a field width and a format string in a single interpolated expression.</span></span> <span data-ttu-id=\"0dac1-176\">Immettere prima la larghezza del campo, seguita dai due punti e dalla stringa di formato.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-176\">The field width comes first, followed by a colon and the format string.</span></span> <span data-ttu-id=\"0dac1-177\">Provare il semplice programma seguente, che visualizza tre stringhe formattate con larghezze di campo definite.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-177\">Try the following simple program that displays three formatted strings with defined field widths.</span></span>\n\n```csharp\nConsole.WriteLine($\"{DateTime.Now,-20:d} Hour {DateTime.Now,-10:HH} {1063.342,15:N2} feet\");\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"0dac1-178\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-178\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"0dac1-179\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-179\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- content: "<span data-ttu-id=\"0dac1-180\">È stata completata la guida introduttiva sulle stringhe interpolate.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-180\">You've completed the interpolated strings quickstart.</span></span> \n\n<span data-ttu-id=\"0dac1-181\">È possibile continuare con queste guide introduttive nell'ambiente di sviluppo locale.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-181\">You can continue these quickstarts on your own local development environment.</span></span> <span data-ttu-id=\"0dac1-182\">Dopo aver acquisito familiarità con le nozioni di base dello [sviluppo locale](local-environment.md), scegliere una guida introduttiva.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-182\">Learn the basics of [local development](local-environment.md) and then pick a quickstart.</span></span> <span data-ttu-id=\"0dac1-183\">È possibile provare questo stesso esercizio, passare direttamente alla guida introduttiva seguente o iniziare da capo con la guida introduttiva [Numeri in C#](numbers-in-csharp-local.md).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-183\">You can try this same exercise, move directly to the next quickstart, or start again with the [numbers in C#](numbers-in-csharp-local.md) quickstart.</span></span>\n\n<span data-ttu-id=\"0dac1-184\">Per altre informazioni sull'uso delle stringhe interpolate, vedere l'argomento [Stringhe interpolate](../language-reference/keywords/interpolated-strings.md) nei Riferimenti per C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0dac1-184\">You can learn more about working with interpolated strings in the [Interpolated Strings](../language-reference/keywords/interpolated-strings.md) topic in the C# Reference.</span></span>\0"
