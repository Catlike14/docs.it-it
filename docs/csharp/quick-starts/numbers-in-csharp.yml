### YamlMime:YamlDocument
documentType: Tutorial
title: <span data-ttu-id="79ad0-101">Numeri in C#</span><span class="sxs-lookup"><span data-stu-id="79ad0-101">Numbers in C#</span></span>
metadata:
  title: Numeri in C#
  description: "In questa guida introduttiva sui tipi numerici si userà il browser per imparare a usare C# in modo interattivo. Verranno descritte le procedure per scrivere codice C# e visualizzare i risultati della compilazione ed esecuzione del codice direttamente nel browser."
  audience: Developer
  ms.custom: mvc
  level: Beginner
  nextTutorialHref: branches-and-loops
  nextTutorialTitle: <span data-ttu-id="79ad0-105">Rami e cicli in C#</span><span class="sxs-lookup"><span data-stu-id="79ad0-105">Branches and loops in C#</span></span>
  displayType: two-column
  interactive: csharp
  ms.openlocfilehash: bc859589078d1e2d16145125a80e738837c1ebf9
  ms.sourcegitcommit: 401c4427a3ec0d1263543033b3084039278509dc
  ms.translationtype: HT
  ms.contentlocale: it-IT
  ms.lasthandoff: 12/07/2017
items:
- durationInMinutes: 1
  content: >
    <span data-ttu-id="79ad0-106">In questa guida introduttiva l'uso dei tipi numerici in C# viene insegnato in modo interattivo, usando il browser per scrivere codice C# e visualizzare i risultati della compilazione ed esecuzione del codice.</span><span class="sxs-lookup"><span data-stu-id="79ad0-106">This quick start teaches you about the number types in C# interactively, using your browser to write C# and see the results of compiling and running your code.</span></span> <span data-ttu-id="79ad0-107">L'esercitazione contiene una serie di lezioni che illustrano l'uso dei numeri e le operazioni matematiche in C#.</span><span class="sxs-lookup"><span data-stu-id="79ad0-107">It contains a series of lessons that explore numbers and math operations in C#.</span></span> <span data-ttu-id="79ad0-108">Queste lezioni presentano le nozioni fondamentali del linguaggio C#.</span><span class="sxs-lookup"><span data-stu-id="79ad0-108">These lessons teach you the fundamentals of the C# language.</span></span>
- title: <span data-ttu-id="79ad0-109">Esplorare le operazioni matematiche su interi</span><span class="sxs-lookup"><span data-stu-id="79ad0-109">Explore integer math</span></span>
  durationInMinutes: 4
  content: "<span data-ttu-id=\"79ad0-110\">Eseguire il codice seguente nella finestra interattiva.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-110\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"79ad0-111\">A tale scopo, digitare il blocco di codice seguente nella finestra interattiva e fare clic sul pulsante **Esegui**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-111\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 18;\nint b = 6;\nint c = a + b;\nConsole.WriteLine(c);\n```\n\n<span data-ttu-id=\"79ad0-112\">Questa è una delle operazioni matematiche fondamentali su interi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-112\">You've just seen one of the fundamental math operations with integers.</span></span> <span data-ttu-id=\"79ad0-113\">Il tipo `int` rappresenta un **intero**, ovvero un numero intero positivo o negativo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-113\">The `int` type represents an **integer**, a positive or negative whole number.</span></span> <span data-ttu-id=\"79ad0-114\">Per l'addizione si usa il simbolo `+`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-114\">You use the `+` symbol for addition.</span></span> <span data-ttu-id=\"79ad0-115\">Altre operazioni matematiche comuni per gli interi includono:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-115\">Other common mathematical operations for integers include:</span></span>\n\n- <span data-ttu-id=\"79ad0-116\">`-` per la sottrazione</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-116\">`-` for subtraction</span></span>\n- <span data-ttu-id=\"79ad0-117\">`*` per la moltiplicazione</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-117\">`*` for multiplication</span></span>\n- <span data-ttu-id=\"79ad0-118\">`/` per la divisione</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-118\">`/` for division</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"79ad0-119\">In tutte le parti di questa guida introduttiva, è possibile sperimentare liberamente modificando il codice scritto nella finestra interattiva.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-119\">Throughout this quick start, you can explore on your own by modifying the code you've written in the interactive window.</span></span> <span data-ttu-id=\"79ad0-120\">Questa guida introduttiva offre esempi che è possibile provare a ogni passaggio.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-120\">This quick start provides examples that you can try at each step.</span></span>\n\n<span data-ttu-id=\"79ad0-121\">Per iniziare, esplorare le diverse operazioni.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-121\">Start by exploring those different operations.</span></span> <span data-ttu-id=\"79ad0-122\">Modificare la terza riga per provare ognuna di queste operazioni.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-122\">Modify the third line to try each of these operations.</span></span> <span data-ttu-id=\"79ad0-123\">Dopo ogni modifica, fare clic sul pulsante **Esegui**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-123\">After each edit, click the **Run** button.</span></span>\n\n<span data-ttu-id=\"79ad0-124\">Sottrazione:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-124\">Subtraction:</span></span>\n\n```csharp\nint c = a - b;\n```\n\n<span data-ttu-id=\"79ad0-125\">Moltiplicazione:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-125\">Multiplication:</span></span>\n\n```csharp\nint c = a * b;\n```\n\n<span data-ttu-id=\"79ad0-126\">Divisione:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-126\">Division:</span></span> \n\n```csharp\nint c = a / b;\n```\n\n<span data-ttu-id=\"79ad0-127\">È anche possibile sperimentare eseguendo più operazioni matematiche nella stessa riga.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-127\">You can also experiment by performing multiple mathematics operations in the same line, if you'd like.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"79ad0-128\">Mentre si impara a usare C# (o qualsiasi linguaggio di programmazione) sicuramente si commetteranno errori durante la scrittura del codice.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-128\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"79ad0-129\">Il **compilatore** troverà questi errori e li segnalerà.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-129\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"79ad0-130\">Quando l'output contiene messaggi di errore, esaminare attentamente il codice di esempio e il codice nella finestra interattiva per scoprire cosa correggere.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-130\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"79ad0-131\">Questo esercizio sarà utile per imparare la struttura del codice C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-131\">That exercise will help you learn the structure of C# code.</span></span>     \n\n> [!NOTE]\n> <span data-ttu-id=\"79ad0-132\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-132\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"79ad0-133\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-133\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="79ad0-134">Esplorare l'ordine delle operazioni</span><span class="sxs-lookup"><span data-stu-id="79ad0-134">Explore order of operations</span></span>
  durationInMinutes: 7
  content: "<span data-ttu-id=\"79ad0-135\">Il linguaggio C# stabilisce un ordine di precedenza per le diverse operazioni matematiche, con regole coerenti con quelle della matematica.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-135\">The C# language defines the precedence of different mathematics operations with rules consistent with the rules you learned in mathematics.</span></span>\n<span data-ttu-id=\"79ad0-136\">La moltiplicazione e la divisione hanno la precedenza rispetto ad addizione e sottrazione.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-136\">Multiplication and division take precedence over addition and subtraction.</span></span>\n<span data-ttu-id=\"79ad0-137\">Esplorare questo concetto eseguendo il codice seguente nella finestra interattiva:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-137\">Explore that by running the following code in the interactive window:</span></span>\n\n```csharp\nint a = 5;\nint b = 4;\nint c = 2;\nint d = a + b * c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"79ad0-138\">L'output dimostra che la moltiplicazione viene eseguita prima dell'addizione.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-138\">The output demonstrates that the multiplication is performed before the addition.</span></span>\n\n<span data-ttu-id=\"79ad0-139\">È possibile forzare un ordine diverso per le operazioni racchiudendo tra parentesi l'operazione o le operazioni che si vuole eseguire per prime:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-139\">You can force a different order of operation by adding parentheses around the operation or operations you want performed first:</span></span>\n\n```csharp\nint a = 5;\nint b = 4;\nint c = 2;\nint d = (a  + b) * c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"79ad0-140\">Sperimentare ulteriormente combinando molte operazioni diverse.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-140\">Explore more by combining many different operations.</span></span> <span data-ttu-id=\"79ad0-141\">Sostituire la quarta riga sopra con una simile alla seguente:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-141\">Replace the fourth line above with something like this:</span></span>\n\n```csharp\nint d = (a + b) - 6 * c + (12 * 4) / 3 + 12;\n```\n\n<span data-ttu-id=\"79ad0-142\">È possibile che si sia notato un comportamento interessante per gli interi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-142\">You may have noticed an interesting behavior for integers.</span></span> <span data-ttu-id=\"79ad0-143\">La divisione di interi genera sempre un risultato intero, anche quando ci si aspetta che il risultato includa una parte decimale o frazionaria.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-143\">Integer division always produces an integer result, even when you'd expect the result to include a decimal or fractional portion.</span></span>\n\n<span data-ttu-id=\"79ad0-144\">Se questo comportamento non è stato notato, provare il codice seguente:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-144\">If you haven't seen this behavior, try the following:</span></span>\n\n```csharp\nint a = 7;\nint b = 4;\nint c = 3;\nint d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"79ad0-145\">Fare clic su **Esegui** di nuovo per visualizzare i risultati.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-145\">Click **Run** again to see the results.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"79ad0-146\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-146\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"79ad0-147\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-147\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="79ad0-148">Esplorare la precisione e i limiti delle operazioni su interi</span><span class="sxs-lookup"><span data-stu-id="79ad0-148">Explore integer precision and limits</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"79ad0-149\">L'ultimo esempio dimostra che la divisione di interi tronca il risultato.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-149\">That last sample showed you that integer division truncates the result.</span></span>\n<span data-ttu-id=\"79ad0-150\">È possibile ottenere il **resto** usando l'operatore **modulo**, ovvero il carattere `%`:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-150\">You can get the **remainder** by using the **modulo** operator, the `%` character:</span></span>\n\n```csharp\nint a = 7;\nint b = 4;\nint c = 3;\nint d = (a  + b) / c;\nint e = (a + b) % c;\nConsole.WriteLine($\"quotient: {d}\");\nConsole.WriteLine($\"remainder: {e}\");\n```\n\n<span data-ttu-id=\"79ad0-151\">Il tipo integer in C# è diverso dagli interi matematici per un altro aspetto, ovvero per il tipo `int` esistono limiti minimi e massimi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-151\">The C# integer type differs from mathematical integers in one other way: the `int` type has minimum and maximum limits.</span></span> <span data-ttu-id=\"79ad0-152\">Eseguire questo codice nella finestra interattiva per visualizzare questi limiti:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-152\">Run this code in the interactive window to see those limits:</span></span>\n\n```csharp\nint max = int.MaxValue;\nint min = int.MinValue;\nConsole.WriteLine($\"The range of integers is {min} to {max}\");\n```\n\n<span data-ttu-id=\"79ad0-153\">Se un calcolo produce un valore che supera questi limiti, si genera una condizione di **underflow** o **overflow**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-153\">If a calculation produces a value that exceeds those limits, you have an **underflow** or **overflow** condition.</span></span> <span data-ttu-id=\"79ad0-154\">La risposta sembra proseguire da un limite all'altro.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-154\">The answer appears to wrap from one limit to the other.</span></span> <span data-ttu-id=\"79ad0-155\">Aggiungere queste due righe nella finestra interattiva per vedere un esempio:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-155\">Add these two lines to the interactive window to see an example:</span></span>\n\n```csharp\nint what = max + 3;\nConsole.WriteLine($\"An example of overflow: {what}\");\n```\n\n<span data-ttu-id=\"79ad0-156\">Si noti che la risposta è molto vicina all'intero minimo (negativo).</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-156\">Notice that the answer is very close to the minimum (negative) integer.</span></span> <span data-ttu-id=\"79ad0-157\">È uguale a `min + 2`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-157\">It's the same as `min + 2`.</span></span> <span data-ttu-id=\"79ad0-158\">L'operazione di addizione **ha causato l'overflow** dei valori consentiti per gli interi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-158\">The addition operation **overflowed** the allowed values for integers.</span></span>\n<span data-ttu-id=\"79ad0-159\">La risposta è un numero negativo molto grande, poiché un overflow \"ritorna a capo\" proseguendo dal valore intero più grande possibile a quello più piccolo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-159\">The answer is a very large negative number because an overflow \"wraps around\" from the largest possible integer value to the smallest.</span></span>\n\n<span data-ttu-id=\"79ad0-160\">Esistono altri tipi numerici con limiti e precisione diversi che è possibile usare quando il tipo `int` non soddisfa le proprie esigenze.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-160\">There are other numeric types with different limits and precision that you would use when the `int` type doesn't meet your needs.</span></span> <span data-ttu-id=\"79ad0-161\">Questi tipi verranno presentati nelle prossime lezioni.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-161\">Let's explore those next.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"79ad0-162\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-162\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"79ad0-163\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-163\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="79ad0-164">Usare il tipo double</span><span class="sxs-lookup"><span data-stu-id="79ad0-164">Work with the double type</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"79ad0-165\">Il tipo numerico `double` rappresenta un numero a virgola mobile a precisione doppia.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-165\">The `double` numeric type represents a double-precision floating point number.</span></span> <span data-ttu-id=\"79ad0-166\">Questi termini potrebbero risultare sconosciuti.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-166\">Those terms may be new to you.</span></span> <span data-ttu-id=\"79ad0-167\">Un numero **a virgola mobile** è utile per rappresentare numeri non integrali, con ordine di grandezza molto grande o molto piccolo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-167\">A **floating point** number is useful to represent non-integral numbers that may be very large or small in magnitude.</span></span> <span data-ttu-id=\"79ad0-168\">Il termine **precisione doppia** indica che questi numeri vengono archiviati con una maggiore precisione rispetto alla **precisione singola**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-168\">**Double-precision** means that these numbers are stored using greater precision than **single-precision**.</span></span> <span data-ttu-id=\"79ad0-169\">Nei computer moderni è più comune usare i numeri a precisione doppia rispetto ai numeri a precisione singola.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-169\">On modern computers, it is more common to use double precision than single precision numbers.</span></span>\n<span data-ttu-id=\"79ad0-170\">Per iniziare a esplorare questo tipo,</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-170\">Let's explore.</span></span> <span data-ttu-id=\"79ad0-171\">provare il codice seguente nella finestra interattiva ed esaminare il risultato:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-171\">Try the following code in the interactive window and see the result:</span></span>\n\n```csharp\ndouble a = 5;\ndouble b = 4;\ndouble c = 2;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"79ad0-172\">Si noti che la risposta include la parte decimale del quoziente.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-172\">Notice that the answer includes the decimal portion of the quotient.</span></span> <span data-ttu-id=\"79ad0-173\">Provare ora un'espressione leggermente più complessa con valori double:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-173\">Try a slightly more complicated expression with doubles:</span></span>\n\n```csharp\ndouble a = 19;\ndouble b = 23;\ndouble c = 8;\ndouble d = (a  + b) / c;\nConsole.WriteLine(d);\n```\n\n<span data-ttu-id=\"79ad0-174\">L'intervallo di un valore double è molto maggiore rispetto ai valori integer.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-174\">The range of a double value is much greater than integer values.</span></span> <span data-ttu-id=\"79ad0-175\">Provare il codice seguente nella finestra interattiva:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-175\">Try the following code in the interactive window:</span></span>\n\n```csharp\ndouble max = double.MaxValue;\ndouble min = double.MinValue;\nConsole.WriteLine($\"The range of double is {min} to {max}\");\n```\n\n<span data-ttu-id=\"79ad0-176\">Questi valori vengono stampati con la notazione scientifica.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-176\">These values are printed out in scientific notation.</span></span> <span data-ttu-id=\"79ad0-177\">Il numero a sinistra di `E` rappresenta il significando.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-177\">The number to the left of the `E` is the significand.</span></span> <span data-ttu-id=\"79ad0-178\">Il numero a destra è l'esponente, come potenza di 10.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-178\">The number to the right is the exponent, as a power of 10.</span></span> \n\n<span data-ttu-id=\"79ad0-179\">Come per i numeri decimali in matematica, i valori double in C# possono presentare errori di arrotondamento.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-179\">Just like decimal numbers in math, doubles in C# can have rounding errors.</span></span> <span data-ttu-id=\"79ad0-180\">Provare questo codice:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-180\">Try this code:</span></span>\n\n```csharp\ndouble third = 1.0 / 3.0;\nConsole.WriteLine(third);\n```\n\n<span data-ttu-id=\"79ad0-181\">Si sa che `0.3` periodico non è esattamente identico a `1/3`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-181\">You know that `0.3` repeating is not exactly the same as `1/3`.</span></span>\n\n<span data-ttu-id=\"79ad0-182\">***Esercizio***</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-182\">***Challenge***</span></span>\n\n<span data-ttu-id=\"79ad0-183\">Provare altri calcoli con numeri grandi, numeri piccoli, moltiplicazione e divisione usando il tipo `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-183\">Try other calculations with large numbers, small numbers, multiplication and division using the `double` type.</span></span>  <span data-ttu-id=\"79ad0-184\">Provare calcoli più complessi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-184\">Try more complicated calculations.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"79ad0-185\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-185\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"79ad0-186\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-186\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="79ad0-187">Usare i tipi a virgola fissa</span><span class="sxs-lookup"><span data-stu-id="79ad0-187">Work with fixed point types</span></span>
  durationInMinutes: 8
  content: "<span data-ttu-id=\"79ad0-188\">Sono già stati presentati i tipi numerici di base in C#, ovvero integer e double.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-188\">You've seen the basic numeric types in C#: integers and doubles.</span></span>  <span data-ttu-id=\"79ad0-189\">C'è un altro tipo da conoscere, ovvero `decimal`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-189\">There is one other type to learn: the `decimal` type.</span></span> <span data-ttu-id=\"79ad0-190\">Il tipo `decimal` ha un intervallo più piccolo, ma maggiore precisione di `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-190\">The `decimal` type has a smaller range but greater precision than `double`.</span></span> <span data-ttu-id=\"79ad0-191\">Il termine **virgola fissa** significa che il separatore decimale (o punto binario) non si sposta.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-191\">The term **fixed point** means that the decimal point (or binary point) doesn't move.</span></span> <span data-ttu-id=\"79ad0-192\">Esaminare il codice seguente:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-192\">Let's take a look:</span></span>\n\n```csharp\ndecimal min = decimal.MinValue;\ndecimal max = decimal.MaxValue;\nConsole.WriteLine($\"The range of the decimal type is {min} to {max}\");\n```\n\n<span data-ttu-id=\"79ad0-193\">Si noti che l'intervallo è minore rispetto al tipo `double`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-193\">Notice that the range is smaller than the `double` type.</span></span> <span data-ttu-id=\"79ad0-194\">Per vedere la maggiore precisione del tipo decimal, provare il codice seguente:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-194\">You can see the greater precision with the decimal type by trying the following code:</span></span>\n\n```csharp\ndouble a = 1.0;\ndouble b = 3.0;\nConsole.WriteLine(a / b);\n\ndecimal c = 1.0M;\ndecimal d = 3.0M;\nConsole.WriteLine(c / d);\n```\n\n<span data-ttu-id=\"79ad0-195\">Il suffisso `M` nei numeri è il modo in cui si indica che una costante deve usare il tipo `decimal`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-195\">The `M` suffix on the numbers is how you indicate that a constant should use the `decimal` type.</span></span>\n\n<span data-ttu-id=\"79ad0-196\">Si noti che le operazioni matematiche con il tipo decimal includono più cifre a destra del separatore decimale.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-196\">Notice that the math using the decimal type has more digits to the right of the decimal point.</span></span> \n\n<span data-ttu-id=\"79ad0-197\">***Esercizio***</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-197\">***Challenge***</span></span>\n\n<span data-ttu-id=\"79ad0-198\">Dopo aver esaminato i diversi tipi numerici, scrivere codice che calcola l'area di un cerchio con raggio di 6 cm.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-198\">Now that you've seen the different numeric types, write code that calculates the area of a circle whose radius is 2.50 inches.</span></span> <span data-ttu-id=\"79ad0-199\">Ricordarsi che l'area di un cerchio si calcola moltiplicando il quadrato del raggio per Pi greco.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-199\">Remember that the area of a circle is the radius squared multiplied by PI.</span></span> <span data-ttu-id=\"79ad0-200\">Suggerimento: C# contiene una costante per Pi greco, <xref:System.Math.PI?displayProperty=nameWithType>, che è possibile usare per tale valore.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-200\">One hint: C# contains a constant for PI, <xref:System.Math.PI?displayProperty=nameWithType> that you can use for that value.</span></span> \n\n> [!NOTE]\n> <span data-ttu-id=\"79ad0-201\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-201\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"79ad0-202\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-202\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="79ad0-203">Completare l'esercizio</span><span class="sxs-lookup"><span data-stu-id="79ad0-203">Complete challenge</span></span>
  durationInMinutes: 1
  content: "<span data-ttu-id=\"79ad0-204\">È stata completata la guida introduttiva \"Numeri in C#\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-204\">You've completed the \"Numbers in C#\" quick start.</span></span> \n\n<span data-ttu-id=\"79ad0-205\">È possibile continuare con queste guide introduttive nel proprio ambiente di sviluppo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-205\">You can continue these quick starts on your own development environment.</span></span> <span data-ttu-id=\"79ad0-206\">L'argomento [Get started with .NET in 10 minutes](https://www.microsoft.com/net/core) (Iniziare a usare .NET in 10 minuti) contiene istruzioni per la configurazione dell'ambiente di sviluppo locale.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-206\">The .NET topic [Get Started in 10 minutes](https://www.microsoft.com/net/core) has instructions for setting up your local development environment.</span></span> <span data-ttu-id=\"79ad0-207\">Una volta completata la configurazione, continuare con [Rami e cicli](branches-and-loops-local.md) nell'ambiente locale.</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-207\">Once you've done that, continue with [Branches and loops](branches-and-loops-local.md) in your local environment.</span></span>\n\n<span data-ttu-id=\"79ad0-208\">Negli argomenti seguenti sono disponibili ulteriori informazioni sui numeri in C#:</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-208\">You can learn more about numbers in C# in the following topics:</span></span>\n\n<span data-ttu-id=\"79ad0-209\">[Tabella dei tipi integrali](../language-reference/keywords/integral-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-209\">[Integral Types Table](../language-reference/keywords/integral-types-table.md) </span></span>  \n<span data-ttu-id=\"79ad0-210\">[Tabella dei tipi a virgola mobile](../language-reference/keywords/floating-point-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-210\">[Floating-Point Types Table](../language-reference/keywords/floating-point-types-table.md) </span></span>  \n<span data-ttu-id=\"79ad0-211\">[Tabella dei tipi predefiniti](../language-reference/keywords/built-in-types-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-211\">[Built-In Types Table](../language-reference/keywords/built-in-types-table.md) </span></span>  \n<span data-ttu-id=\"79ad0-212\">[Tabella delle conversioni numeriche implicite](../language-reference/keywords/implicit-numeric-conversions-table.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-212\">[Implicit Numeric Conversions Table](../language-reference/keywords/implicit-numeric-conversions-table.md) </span></span>  \n[<span data-ttu-id=\"79ad0-213\">Tabella delle conversioni numeriche esplicite</span><span class=\"sxs-lookup\"><span data-stu-id=\"79ad0-213\">Explicit Numeric Conversions Table</span></span>](../language-reference/keywords/explicit-numeric-conversions-table.md)\0"
