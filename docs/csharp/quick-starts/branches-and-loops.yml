documentType: Tutorial
title: <span data-ttu-id="e941c-101">Rami e cicli</span><span class="sxs-lookup"><span data-stu-id="e941c-101">Branches and loops</span></span>
metadata:
  title: Rami e cicli
  description: "In questa Guida introduttiva su cicli e diramazioni, si userà il browser per informazioni su c# in modo interattivo. Consentiranno di scrivere codice c# di visualizzare i risultati della compilazione ed esecuzione di codice direttamente nel browser."
  audience: Developer
  level: Beginner
  ms.custom: mvc
  displayType: two-column
  interactive: csharp
  nextTutorialHref: arrays-and-collections
  nextTutorialTitle: <span data-ttu-id="e941c-105">Matrici e raccolte in c#</span><span class="sxs-lookup"><span data-stu-id="e941c-105">Arrays and collections in C#</span></span>
items:
- durationInMinutes: 1
  content: "<span data-ttu-id=\"e941c-106\">Questa Guida introduttiva illustra come scrivere codice che esamina le variabili e le modifiche in base a tali variabili di percorso di esecuzione.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-106\">This quick start teaches you how to write code that examines variables and changes execution path based on those variables.</span></span> <span data-ttu-id=\"e941c-107\">Si userà il browser per scrivere in modo interattivo in c# e visualizzare i risultati di compilazione e l'esecuzione del codice.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-107\">You'll use your browser to write C# interactively and see the results of compiling and running your code.</span></span> <span data-ttu-id=\"e941c-108\">Questa Guida introduttiva contiene una serie di lezioni che esplorano la diramazione e costrutti del linguaggio c# di ciclo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-108\">This quick start contains a series of lessons that explore branching and looping constructs in C#.</span></span> <span data-ttu-id=\"e941c-109\">Queste lezioni presentano le nozioni fondamentali del linguaggio C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-109\">These lessons teach you the fundamentals of the C# language.</span></span>\n"
  ms.openlocfilehash: d86203d6e95f82f9db355b087e9abc669ffffac8
  ms.sourcegitcommit: 43c656811dd38a66a6672084c65d10c0cbbf2015
  ms.translationtype: HT
  ms.contentlocale: it-IT
  ms.lasthandoff: 11/22/2017
- title: <span data-ttu-id="e941c-110">Prendere decisioni usando l'istruzione if</span><span class="sxs-lookup"><span data-stu-id="e941c-110">Make decisions using the if statement</span></span>
  durationInMinutes: 4
  content: "<span data-ttu-id=\"e941c-111\">Eseguire il codice seguente nella finestra interattiva.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-111\">Run the following code in the interactive window.</span></span> <span data-ttu-id=\"e941c-112\">A tale scopo, digitare il blocco di codice seguente nella finestra interattiva e fare clic sul pulsante **Esegui**:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-112\">To do that, type the following code block in the interactive window and click the **Run** button:</span></span>\n\n```csharp\nint a = 5;\nint b = 6;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10.\");\n```\n\n<span data-ttu-id=\"e941c-113\">Modificare la dichiarazione di `b` in modo che la somma sia minore di 10:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-113\">Modify the declaration of `b` so that the sum is less than 10:</span></span> \n\n```csharp\nint b = 3;\n```\n\n<span data-ttu-id=\"e941c-114\">Fare di nuovo clic sul pulsante **Esegui**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-114\">Click the **Run** button again.</span></span> <span data-ttu-id=\"e941c-115\">Dato che la risposta è minore a 10, non viene visualizzato nulla.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-115\">Because the answer is less than 10, nothing is printed.</span></span> <span data-ttu-id=\"e941c-116\">La **condizione** testata è false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-116\">The **condition** you're testing is false.</span></span> <span data-ttu-id=\"e941c-117\">Non esiste codice da eseguire perché è stato scritto solo uno dei possibili rami per un'istruzione `if`, ovvero il ramo true.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-117\">You don't have any code to execute because you've only written one of the possible branches for an `if` statement: the true branch.</span></span>\n\n> [!TIP]\n> <span data-ttu-id=\"e941c-118\">Mentre si impara a usare C# (o qualsiasi linguaggio di programmazione) sicuramente si commetteranno errori durante la scrittura del codice.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-118\">As you explore C# (or any programming language), you'll make mistakes when you write code.</span></span> <span data-ttu-id=\"e941c-119\">Il **compilatore** troverà questi errori e li segnalerà.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-119\">The **compiler** will find those errors and report them to you.</span></span> <span data-ttu-id=\"e941c-120\">Quando l'output contiene messaggi di errore, esaminare attentamente il codice di esempio e il codice nella finestra interattiva per scoprire cosa correggere.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-120\">When the output contains error messages, look closely at the example code, and the code in the interactive window to see what to fix.</span></span>\n> <span data-ttu-id=\"e941c-121\">Questo esercizio sarà utile per imparare la struttura del codice C#.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-121\">That exercise will help you learn the structure of C# code.</span></span>     \n\n<span data-ttu-id=\"e941c-122\">Questo primo esempio dimostra le potenzialità di `if` e dei tipi booleani.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-122\">This first sample shows the power of `if` and boolean types.</span></span> <span data-ttu-id=\"e941c-123\">Un valore *booleano* è una variabile che può avere uno di due valori: `true` o `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-123\">A *boolean* is a variable that can have one of two values: `true` or `false`.</span></span> <span data-ttu-id=\"e941c-124\">C# definisce un tipo speciale, `bool` per le variabili booleane.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-124\">C# defines a special type, `bool` for boolean variables.</span></span> <span data-ttu-id=\"e941c-125\">L'istruzione `if` controlla il valore di un `bool`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-125\">The `if` statement checks the value of a `bool`.</span></span> <span data-ttu-id=\"e941c-126\">Quando il valore è `true`, viene eseguita l'istruzione che segue `if`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-126\">When the value is `true`, the statement following the `if` executes.</span></span> <span data-ttu-id=\"e941c-127\">In caso contrario, l'istruzione viene ignorata.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-127\">Otherwise, it is skipped.</span></span> \n\n<span data-ttu-id=\"e941c-128\">Questo processo di controllo delle condizioni ed esecuzione di istruzioni in base a queste condizioni offre molte potenzialità.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-128\">This process of checking conditions and executing statements based on those conditions is very powerful.</span></span> <span data-ttu-id=\"e941c-129\">L'esplorazione continua nelle prossime lezioni.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-129\">Let's explore more.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"e941c-130\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-130\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"e941c-131\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-131\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="e941c-132">Usare insieme if ed else</span><span class="sxs-lookup"><span data-stu-id="e941c-132">Make if and else work together</span></span>
  durationInMinutes: 10
  content: "\n<span data-ttu-id=\"e941c-133\">Per eseguire codice diverso per i rami true e false, è necessario creare un ramo `else` che viene eseguito quando la condizione è false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-133\">To execute different code in both the true and false branches, you create an `else` branch that executes when the condition is false.</span></span> <span data-ttu-id=\"e941c-134\">Provare questo codice:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-134\">Try this:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n    Console.WriteLine(\"The answer is greater than 10\");\nelse\n    Console.WriteLine(\"The answer is not greater than 10\");\n```\n\n<span data-ttu-id=\"e941c-135\">L'istruzione che segue la parola chiave `else` viene eseguita solo quando la condizione testata è `false`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-135\">The statement following the `else` keyword executes only when the condition being tested is `false`.</span></span> <span data-ttu-id=\"e941c-136\">La combinazione di `if` e `else` con condizioni booleane offre tutte le potenzialità necessarie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-136\">Combining `if` and `else` with boolean conditions provides all the power you need.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"e941c-137\">Il rientro applicato alle righe successive alle istruzioni `if` e `else` è pensato per i lettori umani.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-137\">The indentation under the `if` and `else` statements is for human readers.</span></span>\n> <span data-ttu-id=\"e941c-138\">Nel linguaggio C# i rientri o gli spazi vuoti non sono significativi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-138\">The C# language doesn't treat indentation or whitespace as significant.</span></span> <span data-ttu-id=\"e941c-139\">L'istruzione che segue la parola chiave `if` o `else` verrà eseguita in base alla condizione.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-139\">The statement following the `if` or `else` keyword will be executed based on the condition.</span></span> <span data-ttu-id=\"e941c-140\">Tutti gli esempi in questa Guida introduttiva seguono una pratica comune per il rientro alle righe in base al flusso di controllo di istruzioni.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-140\">All the samples in this quick start follow a common practice to indent lines based on the control flow of statements.</span></span>\n\n<span data-ttu-id=\"e941c-141\">Dato che il rientro non è significativo, è necessario usare `{` e `}` per indicare quando si vuole includere più di un'istruzione nel blocco con esecuzione condizionale.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-141\">Because indentation is not significant, you need to use `{` and `}` to indicate when you want more than one statement to be part of the block that executes conditionally.</span></span> <span data-ttu-id=\"e941c-142\">I programmatori C# usano in genere le parentesi graffe in tutte le clausole `if` e `else`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-142\">C# programmers typically use those braces on all `if` and `else` clauses.</span></span> <span data-ttu-id=\"e941c-143\">L'esempio seguente è identico a quello appena creato.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-143\">The following example is the same as what you just created.</span></span> <span data-ttu-id=\"e941c-144\">Provarlo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-144\">Try it.</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nif (a + b > 10)\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n}\n```\n\n> [!TIP]\n> <span data-ttu-id=\"e941c-145\">Resto di questa Guida introduttiva, tutti gli esempi di codice includono le parentesi graffe dopo accettato consigliate.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-145\">Through the rest of this quick start, the code samples all include the braces, following accepted practices.</span></span>\n\n<span data-ttu-id=\"e941c-146\">È possibile testare condizioni più complesse:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-146\">You can test more complicated conditions:</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) && (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"And the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"Or the first number is not greater than the second\");\n}\n```\n\n<span data-ttu-id=\"e941c-147\">`&&` rappresenta \"e\"</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-147\">The `&&` represents \"and\".</span></span> <span data-ttu-id=\"e941c-148\">e significa che entrambe le condizioni devono essere true per eseguire l'istruzione nel ramo true.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-148\">It means both conditions must be true to execute the statement in the true branch.</span></span>  <span data-ttu-id=\"e941c-149\">Questi esempi mostrano anche che è possibile includere più istruzioni in ogni ramo condizionale, a condizione di racchiuderle tra `{` e `}`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-149\">These examples also show that you can have multiple statements in each conditional branch, provided you enclose them in `{` and `}`.</span></span>\n\n<span data-ttu-id=\"e941c-150\">È anche possibile usare `||` per rappresentare \"o\":</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-150\">You can also use  `||` to represent \"or\":</span></span>\n\n```csharp\nint a = 5;\nint b = 3;\nint c = 4;\nif ((a + b + c > 10) || (a > b))\n{\n    Console.WriteLine(\"The answer is greater than 10\");\n    Console.WriteLine(\"Or the first number is greater than the second\");\n}\nelse\n{\n    Console.WriteLine(\"The answer is not greater than 10\");\n    Console.WriteLine(\"And the first number is not greater than the second\");\n}\n```\n\n> [!NOTE]\n> <span data-ttu-id=\"e941c-151\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-151\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"e941c-152\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-152\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="e941c-153">Usare i cicli per ripetere le operazioni</span><span class="sxs-lookup"><span data-stu-id="e941c-153">Use loops to repeat operations</span></span>
  durationInMinutes: 6
  content: "<span data-ttu-id=\"e941c-154\">I **cicli** rappresentano un altro concetto importante per la creazione di programmi di più grandi dimensioni.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-154\">Another important concept to create larger programs is **loops**.</span></span> <span data-ttu-id=\"e941c-155\">I cicli vengono usati per ripetere istruzioni che si vuole eseguire più volte.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-155\">You'll use loops to repeat statements that you want executed more than once.</span></span> <span data-ttu-id=\"e941c-156\">Provare questo codice nella finestra interattiva:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-156\">Try this code in the interactive window:</span></span>\n\n```csharp\nint counter = 0;\nwhile (counter < 10)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n}\n```\n\n<span data-ttu-id=\"e941c-157\">L'istruzione `while` verifica una condizione ed esegue l'istruzione che segue `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-157\">The `while` statement checks a condition and executes the statement following the `while`.</span></span> <span data-ttu-id=\"e941c-158\">Ripeterà la verifica della condizione e l'esecuzione di tali istruzioni fino a quando la condizione è false.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-158\">It will repeat checking the condition and executing those statements until the condition is false.</span></span>\n\n<span data-ttu-id=\"e941c-159\">Questo esempio include un altro operatore nuovo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-159\">There's one other new operator in this example.</span></span> <span data-ttu-id=\"e941c-160\">I caratteri `++` dopo la variabile `counter` rappresentano l'operatore di **incremento**.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-160\">The `++` after the `counter` variable is the **increment** operator.</span></span> <span data-ttu-id=\"e941c-161\">Questo operatore aggiunge 1 al valore del contatore e archivia il valore nella variabile contatore.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-161\">It adds 1 to the value of counter, and stores that value in the counter variable.</span></span>\n\n> [!IMPORTANT]\n> <span data-ttu-id=\"e941c-162\">Assicurarsi che la condizione del ciclo `while` passi a false quando si esegue il codice.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-162\">Make sure that the `while` loop condition does switch to false as you execute the code.</span></span> <span data-ttu-id=\"e941c-163\">In caso contrario, si crea un **ciclo infinito** in cui il programma non termina mai.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-163\">Otherwise, you create an **infinite loop** where your program never ends.</span></span> <span data-ttu-id=\"e941c-164\">Non è prevista una dimostrazione di questo scenario, perché in questo caso si verifica il timeout del motore che esegue il codice e il programma non produrrà alcun output.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-164\">Let's not demonstrate that, because the engine that runs your code will time out and you'll see no output from your program.</span></span>\n\n<span data-ttu-id=\"e941c-165\">Il ciclo `while` testa la condizione prima di eseguire il codice dopo `while`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-165\">The `while` loop tests the condition before executing the code following the `while`.</span></span> <span data-ttu-id=\"e941c-166\">Il ciclo `do` ... `while` esegue prima il codice e poi controlla la condizione,</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-166\">The `do` ... `while` loop executes the code first, and then checks the condition.</span></span> <span data-ttu-id=\"e941c-167\">come segue:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-167\">It looks like this:</span></span>\n\n```csharp\nint counter = 0;\ndo\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n  counter++;\n} while (counter < 10);\n```\n\n<span data-ttu-id=\"e941c-168\">Questo ciclo `do` e il ciclo `while` precedente funzionano allo stesso modo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-168\">This `do` loop and the earlier `while` loop work the same.</span></span> \n\n<span data-ttu-id=\"e941c-169\">Nella prossima lezione verrà presentata un'ultima istruzione di ciclo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-169\">Let's move on to one last loop statement.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"e941c-170\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-170\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"e941c-171\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-171\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="e941c-172">Usare il ciclo for</span><span class="sxs-lookup"><span data-stu-id="e941c-172">Work with the for loop</span></span>
  durationInMinutes: 5
  content: "<span data-ttu-id=\"e941c-173\">Un'altra istruzione di ciclo comune nel codice C# è il ciclo `for`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-173\">Another common loop statement that you'll see in C# code is the `for` loop.</span></span> <span data-ttu-id=\"e941c-174\">Provare questo codice nella finestra interattiva:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-174\">Try this code in the interactive window:</span></span>\n\n```csharp\nfor(int counter = 0; counter < 10; counter++)\n{\n  Console.WriteLine($\"Hello World! The counter is {counter}\");\n} \n```\n\n<span data-ttu-id=\"e941c-175\">Questo codice esegue le stesse operazioni di ciclo `while` e `do` già usate.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-175\">This does the same work as the `while` loop and the `do` loop you've already used.</span></span> <span data-ttu-id=\"e941c-176\">L'istruzione `for` è composta da tre parti che ne controllano il funzionamento.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-176\">The `for` statement has three parts that control how it works.</span></span> \n\n<span data-ttu-id=\"e941c-177\">La prima parte è l'**inizializzatore for**: `for counter = 0;` dichiara che `counter` è la variabile di ciclo e imposta il valore iniziale su `0`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-177\">The first part is the **for initializer**: `for counter = 0;` declares that `counter` is the loop variable, and sets its initial value to `0`.</span></span>\n\n<span data-ttu-id=\"e941c-178\">La parte centrale è la **condizione for**: `counter < 10` dichiara che questo ciclo `for` continua l'esecuzione fino a quando il valore del contatore è minore di 10.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-178\">The middle part is the **for condition**: `counter < 10` declares that this `for` loop continues to execute as long as the value of counter is less than 10.</span></span>\n\n<span data-ttu-id=\"e941c-179\">La parte finale è l'**iteratore for**: `counter++` specifica come modificare la variabile di ciclo dopo l'esecuzione del blocco successivo all'istruzione `for`.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-179\">The final part is the **for iterator**: `counter++` specifies how to modify the loop variable after executing the block following the `for` statement.</span></span> <span data-ttu-id=\"e941c-180\">In questo caso, specifica che `counter` deve essere incrementato di 1 a ogni esecuzione del blocco.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-180\">Here, it specifies that `counter` should be incremented by 1 each time the block executes.</span></span>\n\n<span data-ttu-id=\"e941c-181\">Sperimentare da soli questi elementi.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-181\">Experiment with these yourself.</span></span> <span data-ttu-id=\"e941c-182\">Eseguire queste prove:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-182\">Try each of the following:</span></span>\n\n- <span data-ttu-id=\"e941c-183\">Cambiare l'inizializzatore in modo che inizi da un valore diverso.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-183\">Change the initializer to start at a different value.</span></span>\n- <span data-ttu-id=\"e941c-184\">Cambiare la condizione in modo che si interrompa in corrispondenza di un valore diverso.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-184\">Change the condition to stop at a different value.</span></span>\n\n<span data-ttu-id=\"e941c-185\">Al termine, passare alla prossima lezione che prevede la scrittura di codice per usare quanto finora appreso.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-185\">When you're done, let's move on to write some code yourself to use what you've learned.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"e941c-186\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-186\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"e941c-187\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-187\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="e941c-188">Combinare i cicli e diramazioni</span><span class="sxs-lookup"><span data-stu-id="e941c-188">Combine branches and loops</span></span>
  durationInMinutes: 12
  content: "<span data-ttu-id=\"e941c-189\">Dopo aver esaminato l'istruzione `if` e i costrutti per i cicli nel linguaggio C#, provare a scrivere codice C# per ottenere la somma di tutti i numeri interi da 1 a 20 divisibili per 3.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-189\">Now that you've seen the `if` statement and the looping constructs in the C# language, see if you can write C# code to find the sum of all integers 1 through 20 that are divisible by 3.</span></span>  <span data-ttu-id=\"e941c-190\">Ecco alcuni suggerimenti:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-190\">Here are a few hints:</span></span>\n\n- <span data-ttu-id=\"e941c-191\">L'operatore `%` restituisce il resto di un'operazione di divisione.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-191\">The `%` operator gives you the remainder of a division operation.</span></span>\n- <span data-ttu-id=\"e941c-192\">L'istruzione `if` offre la condizione per stabilire se un numero deve fare parte della somma.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-192\">The `if` statement givesx you the condition to see if a number should be part of the sum.</span></span>\n- <span data-ttu-id=\"e941c-193\">Il ciclo `for` può essere utile per ripetere una serie di passaggi per tutti i numeri da 1 a 20.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-193\">The `for` loop can help you repeat a series of steps for all the numbers 1 through 20.</span></span>\n\n<span data-ttu-id=\"e941c-194\">Sperimentare e quindi</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-194\">Try it yourself.</span></span> <span data-ttu-id=\"e941c-195\">controllare i risultati.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-195\">Then check how you did.</span></span>\n\n> [!NOTE]\n> <span data-ttu-id=\"e941c-196\">Questa esperienza di scrittura del codice online è in modalità di anteprima.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-196\">This online coding experience is in preview mode.</span></span> <span data-ttu-id=\"e941c-197\">Se si verificano problemi, segnalarli [nel repository dotnet/try](https://github.com/dotnet/try/issues).</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-197\">If you encounter problems, please report them [on the dotnet/try repo](https://github.com/dotnet/try/issues).</span></span>\n"
- title: <span data-ttu-id="e941c-198">Completare l'esercizio</span><span class="sxs-lookup"><span data-stu-id="e941c-198">Complete challenge</span></span>
  durationInMinutes: 1
  content: "<span data-ttu-id=\"e941c-199\">È stata completata la \"rami e cicli\" Guida introduttiva.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-199\">You've completed the \"branches and loops\" quick start.</span></span> \n\n<span data-ttu-id=\"e941c-200\">È possibile continuare a queste guide introduttive sull'ambiente di sviluppo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-200\">You can continue these quick starts on your own development environment.</span></span> <span data-ttu-id=\"e941c-201\">L'argomento .NET [Introduzione a 10 minuti](https://www.microsoft.com/net/core) contiene istruzioni per l'impostazione dell'ambiente di sviluppo locale.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-201\">The .NET topic [Get Started in 10 minutes](https://www.microsoft.com/net/core) has instructions for setting up your local development environment.</span></span> <span data-ttu-id=\"e941c-202\">Una volta completate, continuare con [Guida introduttiva di raccolta elenco](arrays-and-collections.md) nell'ambiente locale.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-202\">Once you've done that, continue with [List collection quickstart](arrays-and-collections.md) in your local environment.</span></span>\n\n<span data-ttu-id=\"e941c-203\">Maggiori informazioni su questi concetti sono disponibili in questi argomenti:</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-203\">You can learn more about these concepts in these topics:</span></span>\n\n<span data-ttu-id=\"e941c-204\">[Istruzioni if ed else](../language-reference/keywords/if-else.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-204\">[If and else statement](../language-reference/keywords/if-else.md) </span></span>  \n<span data-ttu-id=\"e941c-205\">[Istruzione while](../language-reference/keywords/while.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-205\">[While statement](../language-reference/keywords/while.md) </span></span>  \n<span data-ttu-id=\"e941c-206\">[Istruzione do](../language-reference/keywords/do.md) </span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-206\">[Do statement](../language-reference/keywords/do.md) </span></span>  \n[<span data-ttu-id=\"e941c-207\">Istruzione for</span><span class=\"sxs-lookup\"><span data-stu-id=\"e941c-207\">For statement</span></span>](../language-reference/keywords/for.md)\0"
